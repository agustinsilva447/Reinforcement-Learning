def state_out_new_2(x,y,z):

    s_0 = np.sqrt(2)/2*(-np.sqrt(2)/2*1j*np.exp(1j*z)*np.sin(y/2)**2 + np.sqrt(2)/2*np.exp(-1j*z)*np.cos(y/2)**2)*np.cos(x/2)**2 - np.sqrt(2)/2*(-np.sqrt(2)/2*1j*np.exp(1j*z)*np.cos(y/2)**2 + np.sqrt(2)/2*np.exp(-1j*z)*np.sin(y/2)**2)*np.sin(x/2)**2 - np.sqrt(2)*1j*(-np.sqrt(2)/2*1j*np.exp(1j*z)*np.sin(y/2)*np.cos(y/2) - np.sqrt(2)/2*np.exp(-1j*z)*np.sin(y/2)*np.cos(y/2))*np.sin(x/2)*np.cos(x/2) + np.sqrt(2)/2*1j*(-(-np.sqrt(2)/2*1j*np.exp(1j*z)*np.sin(y/2)**2 + np.sqrt(2)/2*np.exp(-1j*z)*np.cos(y/2)**2)*np.sin(x/2)**2 + (-np.sqrt(2)/2*1j*np.exp(1j*z)*np.cos(y/2)**2 + np.sqrt(2)/2*np.exp(-1j*z)*np.sin(y/2)**2)*np.cos(x/2)**2 - 2*1j*(-np.sqrt(2)/2*1j*np.exp(1j*z)*np.sin(y/2)*np.cos(y/2) - np.sqrt(2)/2*np.exp(-1j*z)*np.sin(y/2)*np.cos(y/2))*np.sin(x/2)*np.cos(x/2))
    s_1 = -np.sqrt(2)/2*1j*(np.sqrt(2)/2*1j*np.sin(y/2)**2 + np.sqrt(2)/2*np.cos(y/2)**2)*np.sin(x/2)*np.cos(x/2) - np.sqrt(2)/2*(-np.sqrt(2)/2*np.sin(y/2)*np.cos(y/2) + np.sqrt(2)/2*1j*np.sin(y/2)*np.cos(y/2))*np.sin(x/2)**2 + np.sqrt(2)/2*(np.sqrt(2)/2*np.sin(y/2)*np.cos(y/2) - np.sqrt(2)/2*1j*np.sin(y/2)*np.cos(y/2))*np.cos(x/2)**2 - np.sqrt(2)/2*1j*(-np.sqrt(2)/2*np.sin(y/2)**2 - np.sqrt(2)/2*1j*np.cos(y/2)**2)*np.sin(x/2)*np.cos(x/2) + np.sqrt(2)/2*1j*(-1j*(np.sqrt(2)/2*1j*np.sin(y/2)**2 + np.sqrt(2)/2*np.cos(y/2)**2)*np.sin(x/2)*np.cos(x/2) + (-np.sqrt(2)/2*np.sin(y/2)*np.cos(y/2) + np.sqrt(2)/2*1j*np.sin(y/2)*np.cos(y/2))*np.cos(x/2)**2 - (np.sqrt(2)/2*np.sin(y/2)*np.cos(y/2) - np.sqrt(2)/2*1j*np.sin(y/2)*np.cos(y/2))*np.sin(x/2)**2 - 1j*(-np.sqrt(2)/2*np.sin(y/2)**2 - np.sqrt(2)/2*1j*np.cos(y/2)**2)*np.sin(x/2)*np.cos(x/2))
    s_2 = -np.sqrt(2)/2*1j*(np.sqrt(2)/2*1j*np.sin(y/2)**2 + np.sqrt(2)/2*np.cos(y/2)**2)*np.sin(x/2)*np.cos(x/2) - np.sqrt(2)/2*(-np.sqrt(2)/2*np.sin(y/2)*np.cos(y/2) + np.sqrt(2)/2*1j*np.sin(y/2)*np.cos(y/2))*np.sin(x/2)**2 + np.sqrt(2)/2*(np.sqrt(2)/2*np.sin(y/2)*np.cos(y/2) - np.sqrt(2)/2*1j*np.sin(y/2)*np.cos(y/2))*np.cos(x/2)**2 - np.sqrt(2)/2*1j*(-np.sqrt(2)/2*np.sin(y/2)**2 - np.sqrt(2)/2*1j*np.cos(y/2)**2)*np.sin(x/2)*np.cos(x/2) + np.sqrt(2)/2*1j*(-1j*(np.sqrt(2)/2*1j*np.sin(y/2)**2 + np.sqrt(2)/2*np.cos(y/2)**2)*np.sin(x/2)*np.cos(x/2) + (-np.sqrt(2)/2*np.sin(y/2)*np.cos(y/2) + np.sqrt(2)/2*1j*np.sin(y/2)*np.cos(y/2))*np.cos(x/2)**2 - (np.sqrt(2)/2*np.sin(y/2)*np.cos(y/2) - np.sqrt(2)/2*1j*np.sin(y/2)*np.cos(y/2))*np.sin(x/2)**2 - 1j*(-np.sqrt(2)/2*np.sin(y/2)**2 - np.sqrt(2)/2*1j*np.cos(y/2)**2)*np.sin(x/2)*np.cos(x/2))
    s_3 = np.sqrt(2)/2*(np.sqrt(2)/2*np.exp(1j*z)*np.sin(y/2)**2 - np.sqrt(2)/2*1j*np.exp(-1j*z)*np.cos(y/2)**2)*np.cos(x/2)**2 - np.sqrt(2)/2*(np.sqrt(2)/2*np.exp(1j*z)*np.cos(y/2)**2 - np.sqrt(2)/2*1j*np.exp(-1j*z)*np.sin(y/2)**2)*np.sin(x/2)**2 - np.sqrt(2)*1j*(np.sqrt(2)/2*np.exp(1j*z)*np.sin(y/2)*np.cos(y/2) + np.sqrt(2)/2*1j*np.exp(-1j*z)*np.sin(y/2)*np.cos(y/2))*np.sin(x/2)*np.cos(x/2) + np.sqrt(2)/2*1j*(-(np.sqrt(2)/2*np.exp(1j*z)*np.sin(y/2)**2 - np.sqrt(2)/2*1j*np.exp(-1j*z)*np.cos(y/2)**2)*np.sin(x/2)**2 + (np.sqrt(2)/2*np.exp(1j*z)*np.cos(y/2)**2 - np.sqrt(2)/2*1j*np.exp(-1j*z)*np.sin(y/2)**2)*np.cos(x/2)**2 - 2*1j*(np.sqrt(2)/2*np.exp(1j*z)*np.sin(y/2)*np.cos(y/2) + np.sqrt(2)/2*1j*np.exp(-1j*z)*np.sin(y/2)*np.cos(y/2))*np.sin(x/2)*np.cos(x/2))
    p_new = np.round(np.array([s_0, s_1, s_2, s_3]).reshape(1,4),5)
    
    return np.abs(p_new)**2